color = ~country,
mode = "markers",
hoverinfo = "text",
text = ~paste("Year:", year, "<br>",
"Annual Emission:", get(input$option), "Million Tonnes From", input$option,
"<br>", "Country:", country)
) %>%
filter(country %in% input$countries) %>%
group_by(country) %>%
add_lines() %>%
layout(
title = paste0("CO2 Emissions by Country ", "(", input$option, ")"),
xaxis = list(title = "Year"),
yaxis = list(title = "CO2 Emissions (Million Tonnes)"),
legend = list(title = list(text = "Countries"))
)
})
source("~/Desktop/assignment-4-data-applications-tdao09/app_server.R")
server <- function(input, output) {
output$average <- renderText("Hi")
output$plot <- renderPlotly({
plot_ly(
data = selected_info,
x = ~year,
y = ~get(input$option),
color = ~country,
mode = "markers",
hoverinfo = "text",
text = ~paste("Year:", year, "<br>",
"Annual Emission:", get(input$option), "Million Tonnes From", input$option,
"<br>", "Country:", country)
) %>%
filter(country %in% input$countries) %>%
group_by(country) %>%
add_lines() %>%
layout(
title = paste0("CO2 Emissions by Country ", "(", input$option, ")"),
xaxis = list(title = "Year"),
yaxis = list(title = "CO2 Emissions (Million Tonnes)"),
legend = list(title = list(text = "Countries"))
)
})
}
runApp('Desktop/assignment-4-data-applications-tdao09')
output$average <- renderText("hi")
source("~/Desktop/assignment-4-data-applications-tdao09/app_server.R")
source("~/Desktop/assignment-4-data-applications-tdao09/app_ui.R")
runApp('Desktop/assignment-4-data-applications-tdao09')
source("~/Desktop/assignment-4-data-applications-tdao09/app_server.R")
runApp('Desktop/assignment-4-data-applications-tdao09')
source("~/Desktop/assignment-4-data-applications-tdao09/app_server.R")
runApp('Desktop/assignment-4-data-applications-tdao09')
runApp('Desktop/assignment-4-data-applications-tdao09')
runApp('Desktop/assignment-4-data-applications-tdao09')
runApp('Desktop/assignment-4-data-applications-tdao09')
runApp('Desktop/assignment-4-data-applications-tdao09')
View(selected_info)
source("~/Desktop/assignment-4-data-applications-tdao09/app_server.R")
View(info_2020)
column_2020 <- info_2020 %>% select(CO2)
View(column_2020)
mean <- mean(column_2020)
mean <- mean(column_2020, na.rm == TRUE)
mean <- mean(column_2020, na.rm == TRUE)
View(column_2020)
source("~/Desktop/assignment-4-data-applications-tdao09/app_server.R")
mean_2020 <- mean(column_2020, na.rm == TRUE)
first_num <- pull(column_2020[1, ])
mean_2020 <- mean(as.numeric(column_2020), na.rm == TRUE)
print(typeof(column_2020))
mean_2020 <- mean(info_2020$CO2, na.rm == TRUE)
server <- function(input, output) {
output$average <- renderText(mean(selected_info$CO2, na.rm = TRUE))
output$plot <- renderPlotly({
plot_ly(
data = selected_info,
x = ~year,
y = ~get(input$option),
color = ~country,
mode = "markers",
hoverinfo = "text",
text = ~paste("Year:", year, "<br>",
"Annual Emission:", get(input$option), "Million Tonnes From", input$option,
"<br>", "Country:", country)
) %>%
filter(country %in% input$countries) %>%
group_by(country) %>%
add_lines() %>%
layout(
title = paste0("CO2 Emissions by Country ", "(", input$option, ")"),
xaxis = list(title = "Year"),
yaxis = list(title = "CO2 Emissions (Million Tonnes)"),
legend = list(title = list(text = "Countries"))
)
})
}
mean_2020 <- mean(info_2020$CO2, na.rm == TRUE)
View(info_2020)
mean_2020 <- mean(info_2020$CO2, na.rm == TRUE)
mean_2020 <- mean(info_2020$CO2, na.rm = TRUE)
source("~/Desktop/assignment-4-data-applications-tdao09/app_server.R")
source("~/Desktop/assignment-4-data-applications-tdao09/app_ui.R")
mean_2020 <- round(mean(info_2020$CO2, na.rm = TRUE), digits = 2)
#lowest CO2 in 2020
lowest_co2 <- min(selected_info$CO2, na.rm = TRUE)
#highest CO2 in 2020
highest_co2 <- max(selected_info$CO2, na.rm = TRUE)
# Highest CO2 in 2020
highest_co2 <- round(max(selected_info$CO2, na.rm = TRUE), digits = 2)
# Country with highest CO2
country_highest <- info_2020 %>%
filter(CO2 == highest_co2) %>%
pull(country)
# Highest CO2 in 2020
highest_co2 <- rmax(selected_info$CO2, na.rm = TRUE)
# Highest CO2 in 2020
highest_co2 <- max(selected_info$CO2, na.rm = TRUE)
# Country with highest CO2
country_highest <- info_2020 %>%
filter(CO2 == highest_co2) %>%
pull(country)
server <- function(input, output) {
output$average <- renderText(mean(selected_info$CO2, na.rm = TRUE))
output$plot <- renderPlotly({
plot_ly(
data = selected_info,
x = ~year,
y = ~get(input$option),
color = ~country,
mode = "markers",
hoverinfo = "text",
text = ~paste("Year:", year, "<br>",
"Annual Emission:", get(input$option), "Million Tonnes From", input$option,
"<br>", "Country:", country)
) %>%
filter(country %in% input$countries) %>%
group_by(country) %>%
add_lines() %>%
layout(
title = paste0("CO2 Emissions by Country ", "(", input$option, ")"),
xaxis = list(title = "Year"),
yaxis = list(title = "CO2 Emissions (Million Tonnes)"),
legend = list(title = list(text = "Countries"))
)
})
}
# Country with highest CO2
country_highest <- info_2020 %>%
filter(CO2 == highest_co2) %>%
pull(country)
# Country with highest CO2
country_highest <- info_2020 %>%
filter(CO2 == highest_co2)
View(country_highest)
# Highest CO2 in 2020
highest_co2 <- max(info_2020$CO2, na.rm = TRUE)
# Country with highest CO2
country_highest <- info_2020 %>%
filter(CO2 == highest_co2)
server <- function(input, output) {
output$average <- renderText(mean(selected_info$CO2, na.rm = TRUE))
output$plot <- renderPlotly({
plot_ly(
data = selected_info,
x = ~year,
y = ~get(input$option),
color = ~country,
mode = "markers",
hoverinfo = "text",
text = ~paste("Year:", year, "<br>",
"Annual Emission:", get(input$option), "Million Tonnes From", input$option,
"<br>", "Country:", country)
) %>%
filter(country %in% input$countries) %>%
group_by(country) %>%
add_lines() %>%
layout(
title = paste0("CO2 Emissions by Country ", "(", input$option, ")"),
xaxis = list(title = "Year"),
yaxis = list(title = "CO2 Emissions (Million Tonnes)"),
legend = list(title = list(text = "Countries"))
)
})
}
View(country_highest)
world_info <- selected_info %>%
filter(country == "World")
server <- function(input, output) {
output$average <- renderText(mean(selected_info$CO2, na.rm = TRUE))
output$plot <- renderPlotly({
plot_ly(
data = selected_info,
x = ~year,
y = ~get(input$option),
color = ~country,
mode = "markers",
hoverinfo = "text",
text = ~paste("Year:", year, "<br>",
"Annual Emission:", get(input$option), "Million Tonnes From", input$option,
"<br>", "Country:", country)
) %>%
filter(country %in% input$countries) %>%
group_by(country) %>%
add_lines() %>%
layout(
title = paste0("CO2 Emissions by Country ", "(", input$option, ")"),
xaxis = list(title = "Year"),
yaxis = list(title = "CO2 Emissions (Million Tonnes)"),
legend = list(title = list(text = "Countries"))
)
})
}
View(world_info)
# 2020 World Emission
total_in_2020 <- filter(year == 2020) %>%
pull(CO2)
server <- function(input, output) {
output$average <- renderText(mean(selected_info$CO2, na.rm = TRUE))
output$plot <- renderPlotly({
plot_ly(
data = selected_info,
x = ~year,
y = ~get(input$option),
color = ~country,
mode = "markers",
hoverinfo = "text",
text = ~paste("Year:", year, "<br>",
"Annual Emission:", get(input$option), "Million Tonnes From", input$option,
"<br>", "Country:", country)
) %>%
filter(country %in% input$countries) %>%
group_by(country) %>%
add_lines() %>%
layout(
title = paste0("CO2 Emissions by Country ", "(", input$option, ")"),
xaxis = list(title = "Year"),
yaxis = list(title = "CO2 Emissions (Million Tonnes)"),
legend = list(title = list(text = "Countries"))
)
})
}
source("~/Desktop/assignment-4-data-applications-tdao09/app_server.R")
# 2020 World Emission
total_in_2020 <- world_info %>% filter(year == 2020) %>%
pull(CO2)
server <- function(input, output) {
output$average <- renderText(mean(selected_info$CO2, na.rm = TRUE))
output$plot <- renderPlotly({
plot_ly(
data = selected_info,
x = ~year,
y = ~get(input$option),
color = ~country,
mode = "markers",
hoverinfo = "text",
text = ~paste("Year:", year, "<br>",
"Annual Emission:", get(input$option), "Million Tonnes From", input$option,
"<br>", "Country:", country)
) %>%
filter(country %in% input$countries) %>%
group_by(country) %>%
add_lines() %>%
layout(
title = paste0("CO2 Emissions by Country ", "(", input$option, ")"),
xaxis = list(title = "Year"),
yaxis = list(title = "CO2 Emissions (Million Tonnes)"),
legend = list(title = list(text = "Countries"))
)
})
}
total_in_2000 <- world_info %>% filter(year == 2000) %>%
pull(CO2)
server <- function(input, output) {
output$average <- renderText(mean(selected_info$CO2, na.rm = TRUE))
output$plot <- renderPlotly({
plot_ly(
data = selected_info,
x = ~year,
y = ~get(input$option),
color = ~country,
mode = "markers",
hoverinfo = "text",
text = ~paste("Year:", year, "<br>",
"Annual Emission:", get(input$option), "Million Tonnes From", input$option,
"<br>", "Country:", country)
) %>%
filter(country %in% input$countries) %>%
group_by(country) %>%
add_lines() %>%
layout(
title = paste0("CO2 Emissions by Country ", "(", input$option, ")"),
xaxis = list(title = "Year"),
yaxis = list(title = "CO2 Emissions (Million Tonnes)"),
legend = list(title = list(text = "Countries"))
)
})
}
# Difference between 2020 and 2000
diff_between_2020_and_2000 <- total_in_2020 - total_in_2000
# Highest world total
highest_world_total <- max(world_info$CO2)
# Year highest world total
year_highest_total <- world_info %>% filter(CO2 == highest_world_total) %>%
pull(year)
server <- function(input, output) {
output$average <- renderText(mean(selected_info$CO2, na.rm = TRUE))
output$plot <- renderPlotly({
plot_ly(
data = selected_info,
x = ~year,
y = ~get(input$option),
color = ~country,
mode = "markers",
hoverinfo = "text",
text = ~paste("Year:", year, "<br>",
"Annual Emission:", get(input$option), "Million Tonnes From", input$option,
"<br>", "Country:", country)
) %>%
filter(country %in% input$countries) %>%
group_by(country) %>%
add_lines() %>%
layout(
title = paste0("CO2 Emissions by Country ", "(", input$option, ")"),
xaxis = list(title = "Year"),
yaxis = list(title = "CO2 Emissions (Million Tonnes)"),
legend = list(title = list(text = "Countries"))
)
})
}
print(year_highest_total)
source("~/Desktop/assignment-4-data-applications-tdao09/app_server.R")
source("~/Desktop/assignment-4-data-applications-tdao09/app_ui.R")
runApp('Desktop/assignment-4-data-applications-tdao09')
runApp('Desktop/assignment-4-data-applications-tdao09')
source("~/Desktop/assignment-4-data-applications-tdao09/app_ui.R")
runApp('Desktop/assignment-4-data-applications-tdao09')
runApp('Desktop/assignment-4-data-applications-tdao09')
source("~/Desktop/assignment-4-data-applications-tdao09/app_ui.R")
runApp('Desktop/assignment-4-data-applications-tdao09')
runApp('Desktop/assignment-4-data-applications-tdao09')
runApp('Desktop/assignment-4-data-applications-tdao09')
runApp('Desktop/assignment-4-data-applications-tdao09')
runApp('Desktop/assignment-4-data-applications-tdao09')
source("~/Desktop/assignment-4-data-applications-tdao09/app_ui.R")
runApp('Desktop/assignment-4-data-applications-tdao09')
source("~/Desktop/assignment-4-data-applications-tdao09/app_ui.R")
runApp('Desktop/assignment-4-data-applications-tdao09')
source("~/Desktop/assignment-4-data-applications-tdao09/app_ui.R")
runApp('Desktop/assignment-4-data-applications-tdao09')
source("~/Desktop/assignment-4-data-applications-tdao09/app_ui.R")
source("~/Desktop/assignment-4-data-applications-tdao09/app_ui.R")
runApp('Desktop/assignment-4-data-applications-tdao09')
source("~/Desktop/assignment-4-data-applications-tdao09/app_ui.R")
runApp('Desktop/assignment-4-data-applications-tdao09')
source("~/Desktop/assignment-4-data-applications-tdao09/app_ui.R")
runApp('Desktop/assignment-4-data-applications-tdao09')
source("~/Desktop/assignment-4-data-applications-tdao09/app_server.R")
source("~/Desktop/assignment-4-data-applications-tdao09/app_ui.R")
runApp('Desktop/assignment-4-data-applications-tdao09')
source("~/Desktop/assignment-4-data-applications-tdao09/app_ui.R")
source("~/Desktop/assignment-4-data-applications-tdao09/app_server.R")
source("~/Desktop/assignment-4-data-applications-tdao09/app_ui.R")
runApp('Desktop/assignment-4-data-applications-tdao09')
source("~/Desktop/assignment-4-data-applications-tdao09/app_server.R")
runApp('Desktop/assignment-4-data-applications-tdao09')
source("~/Desktop/assignment-4-data-applications-tdao09/app_ui.R")
source("~/Desktop/assignment-4-data-applications-tdao09/app_server.R")
runApp('Desktop/assignment-4-data-applications-tdao09')
source("~/Desktop/assignment-4-data-applications-tdao09/app_server.R")
runApp('Downloads')
source("~/Desktop/assignment-4-data-applications-tdao09/app_server.R")
source("~/Desktop/assignment-4-data-applications-tdao09/app_ui.R")
runApp('Desktop/assignment-4-data-applications-tdao09')
source("~/Desktop/assignment-4-data-applications-tdao09/app_server.R")
source("~/Desktop/assignment-4-data-applications-tdao09/app_ui.R")
runApp('Desktop/assignment-4-data-applications-tdao09')
source("~/Desktop/assignment-4-data-applications-tdao09/app_server.R")
runApp('Desktop/assignment-4-data-applications-tdao09')
source("~/Desktop/assignment-4-data-applications-tdao09/app_server.R")
source("~/Desktop/assignment-4-data-applications-tdao09/app_ui.R")
runApp('Desktop/assignment-4-data-applications-tdao09')
source("~/Desktop/assignment-4-data-applications-tdao09/app_server.R")
source("~/Desktop/assignment-4-data-applications-tdao09/app_ui.R")
runApp('Desktop/assignment-4-data-applications-tdao09')
source("~/Desktop/assignment-4-data-applications-tdao09/app_ui.R")
source("~/Desktop/assignment-4-data-applications-tdao09/app_server.R")
runApp('Desktop/assignment-4-data-applications-tdao09')
runApp('Desktop/assignment-4-data-applications-tdao09')
source("~/Desktop/assignment-4-data-applications-tdao09/app_ui.R")
source("~/Desktop/assignment-4-data-applications-tdao09/app_server.R")
runApp('Desktop/assignment-4-data-applications-tdao09')
source("~/Desktop/assignment-4-data-applications-tdao09/app_server.R")
source("~/Desktop/assignment-4-data-applications-tdao09/app_ui.R")
runApp('Desktop/assignment-4-data-applications-tdao09')
View(world_info)
View(world_info)
View(world_info)
View(selected_info)
View(world_info)
runApp('Desktop/assignment-4-data-applications-tdao09')
source("~/Desktop/assignment-4-data-applications-tdao09/app_server.R")
runApp('Desktop/assignment-4-data-applications-tdao09')
source("~/Desktop/assignment-4-data-applications-tdao09/app_server.R")
runApp('Desktop/assignment-4-data-applications-tdao09')
source("~/Desktop/assignment-4-data-applications-tdao09/app_server.R")
source("~/Desktop/assignment-4-data-applications-tdao09/app_ui.R")
runApp('Desktop/assignment-4-data-applications-tdao09')
source("~/Desktop/assignment-4-data-applications-tdao09/app_server.R")
runApp('Desktop/assignment-4-data-applications-tdao09')
source("~/Desktop/assignment-4-data-applications-tdao09/app_server.R")
runApp('Desktop/assignment-4-data-applications-tdao09')
source("~/Desktop/assignment-4-data-applications-tdao09/app_server.R")
runApp('Desktop/assignment-4-data-applications-tdao09')
source("~/Desktop/assignment-4-data-applications-tdao09/app_server.R")
source("~/Desktop/assignment-4-data-applications-tdao09/app_ui.R")
runApp('Desktop/assignment-4-data-applications-tdao09')
source("~/Desktop/assignment-4-data-applications-tdao09/app_server.R")
intro_page <- tabPanel(
"Introduction",
h1("Trends in Global CO2 Emissions"),
p("Climate change is an important topic because it affects the world in which
we live. With our climate changing, we may experience rises in sea level, the
melting of The Arctic, and changing weather patterns.
Carbon dioxide (CO2) emissions in particular cause global warming
due to the emissions being trapped in the Earth's atmosphere. We should
be concerned about these emissions because they can be used as a measure of
global warming and therefore, climate change."),
p("After analyzing this data set from Our World in Data, I have computed the
following values:"),
textOutput(outputId = "total2020"),
textOutput(outputId = "total2000"),
textOutput(outputId = "diff"),
textOutput(outputId = "highesttotal"),
textOutput(outputId = "highestyear"),
)
runApp('Desktop/assignment-4-data-applications-tdao09')
source("~/Desktop/assignment-4-data-applications-tdao09/app_ui.R")
paste0("This was from the year ", year_highest_total, ".")
runApp('Desktop/assignment-4-data-applications-tdao09')
View(selected_info)
runApp('Desktop/assignment-4-data-applications-tdao09')
source("~/Desktop/assignment-4-data-applications-tdao09/app_ui.R")
source("~/Desktop/assignment-4-data-applications-tdao09/app_server.R")
runApp('Desktop/assignment-4-data-applications-tdao09')
source("~/Desktop/assignment-4-data-applications-tdao09/app_ui.R")
source("~/Desktop/assignment-4-data-applications-tdao09/app_server.R")
runApp('Desktop/assignment-4-data-applications-tdao09')
source("~/Desktop/assignment-4-data-applications-tdao09/app_ui.R")
source("~/Desktop/assignment-4-data-applications-tdao09/app_server.R")
runApp('Desktop/assignment-4-data-applications-tdao09')
source("~/Desktop/assignment-4-data-applications-tdao09/app_ui.R")
runApp('Desktop/assignment-4-data-applications-tdao09')
source("~/Desktop/assignment-4-data-applications-tdao09/app_server.R")
runApp('Desktop/assignment-4-data-applications-tdao09')
source("~/Desktop/assignment-4-data-applications-tdao09/app_server.R")
interactive_page <- tabPanel(
"CO2 Trends",
# Side
sidebarLayout(
sidebarPanel(
selectizeInput(
inputId = "countries",
label = "Select 1-5 Countries:",
choices = unique(selected_info$country),
options = list(maxItems = 5),
multiple = TRUE
),
radioButtons(
inputId = "option",
label = "What do you want the CO2 emissions to be from?",
choices = c("Trade", "Cement", "Coal", "Flaring",
"Gas", "Oil", "CO2", "Other")
),
),
# Main
mainPanel(
plotlyOutput(outputId = "plot"),
textOutput(outputId = "description")
)
)
)
source("~/Desktop/assignment-4-data-applications-tdao09/app_ui.R")
runApp('Desktop/assignment-4-data-applications-tdao09')
runApp('Desktop/assignment-4-data-applications-tdao09')
source("~/Desktop/assignment-4-data-applications-tdao09/app_server.R")
source("~/Desktop/assignment-4-data-applications-tdao09/app_server.R")
runApp('Desktop/assignment-4-data-applications-tdao09')
source("~/Desktop/assignment-4-data-applications-tdao09/app_server.R")
runApp('Desktop/assignment-4-data-applications-tdao09')
source("~/Desktop/assignment-4-data-applications-tdao09/app_ui.R")
source("~/Desktop/assignment-4-data-applications-tdao09/app_server.R")
source("~/Desktop/assignment-4-data-applications-tdao09/app_ui.R")
shiny::runApp('Desktop/assignment-4-data-applications-tdao09')
source("~/Desktop/assignment-4-data-applications-tdao09/app_ui.R")
source("~/Desktop/assignment-4-data-applications-tdao09/app_server.R")
shiny::runApp('Desktop/assignment-4-data-applications-tdao09')
runApp()
setwd("~/Desktop/final-project-tdao09")
source("~/Desktop/final-project-tdao09/analysis.r")
setwd("~/")
setwd("~/")
setwd("~/Desktop/final-project-tdao09 2")
getwd()
setwd("~/Desktop/final-project-tdao09 2")
setwd("~/Desktop/final-project-tdao09/App")
shiny::runApp()
runApp()
source("~/Desktop/final-project-tdao09/App/app_server.R")
source("~/Desktop/final-project-tdao09/App/app_ui.R")
source("~/Desktop/final-project-tdao09/App/interactive_page1_ui.R")
source("~/Desktop/final-project-tdao09/App/interactive_page1_server.R")
runApp()
